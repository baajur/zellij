warning: unused variable: `release`
  --> build.rs:32:9
   |
32 |     let release = if var("PROFILE").unwrap() == "release" {
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_release`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
  --> build.rs:41:9
   |
41 |         set_current_dir(&path);
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
  --> build.rs:61:5
   |
61 |     set_current_dir(&starting_dir);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled

warning: 3 warnings emitted

warning: unused import: `crate::utils::logging::debug_log_to_file`
 --> src/common/wasm_vm.rs:8:5
  |
8 | use crate::utils::logging::debug_log_to_file;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::layout::Layout`
 --> src/server/mod.rs:8:5
  |
8 | use crate::layout::Layout;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ipc`
  --> src/main.rs:11:35
   |
11 |     command_is_executing, errors, ipc, os_input_output, pty_bus, screen, start, utils, wasm_vm,
   |                                   ^^^

warning: unused variable: `ipc_thread`
   --> src/common/mod.rs:191:9
    |
191 |     let ipc_thread = start_server(
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_ipc_thread`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `err_ctx`
   --> src/common/pty_bus.rs:294:72
    |
294 |     pub fn spawn_terminals_for_layout(&mut self, layout_path: PathBuf, err_ctx: ErrorContext) {
    |                                                                        ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_err_ctx`

warning: unused variable: `err_ctx`
   --> src/common/pty_bus.rs:314:46
    |
314 |     pub fn close_pane(&mut self, id: PaneId, err_ctx: ErrorContext) {
    |                                              ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_err_ctx`

warning: unused variable: `maybe_layout`
  --> src/server/mod.rs:42:9
   |
42 |     let maybe_layout = opts.layout.or(default_layout);
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_maybe_layout`

warning: variable does not need to be mutable
  --> src/server/mod.rs:24:5
   |
24 |     mut send_app_instructions: SenderWithContext<AppInstruction>,
   |     ----^^^^^^^^^^^^^^^^^^^^^
   |     |
   |     help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> src/server/mod.rs:28:9
   |
28 |     let mut send_pty_instructions = SenderWithContext::new(
   |         ----^^^^^^^^^^^^^^^^^^^^^
   |         |
   |         help: remove this `mut`

warning: associated function is never used: `total_terminal_panes`
   --> src/client/layout.rs:203:12
    |
203 |     pub fn total_terminal_panes(&self) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function is never used: `start_client`
 --> src/client/mod.rs:6:8
  |
6 | pub fn start_client() {}
  |        ^^^^^^^^^^^^

warning: enum is never used: `ServerToClientMsg`
  --> src/common/ipc.rs:41:10
   |
41 | pub enum ServerToClientMsg {
   |          ^^^^^^^^^^^^^^^^^

warning: associated function is never used: `spawn_terminals_for_layout`
   --> src/common/pty_bus.rs:294:12
    |
294 |     pub fn spawn_terminals_for_layout(&mut self, layout_path: PathBuf, err_ctx: ErrorContext) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
    --> src/client/tab.rs:1904:9
     |
1904 | /         debug_log_to_file(format!(
1905 | |             "set_pane_invisible_borders: {:?}",
1906 | |             invisible_borders
1907 | |         ));
     | |___________^
     |
     = note: `#[warn(unused_must_use)]` on by default
     = note: this `Result` may be an `Err` variant, which should be handled

warning: 14 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.17s
     Running `target/debug/zellij`
